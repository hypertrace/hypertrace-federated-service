{{ $global := . }}
{{- range $k, $job := .Values.jobs }}
{{ if $job.enabled }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $job.prefix }}-{{ $global.Chart.Name }}
  labels:
    release: {{ $global.Release.Name }}
  {{- with $global.Values.jobLabels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  annotations:
    "helm.sh/hook": post-install, post-upgrade
spec:
  # Cancel job if it has not finished after 10 minutes
  activeDeadlineSeconds: 600
  # Keep the job's pod around for 15 minutes. This will be better once we implement pod crashes and errors
  # monitoring.
  ttlSecondsAfterFinished: 900
  template:
    metadata:
      labels:
        release: {{ $global.Release.Name }}
      {{- with $global.Values.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      restartPolicy: OnFailure
    {{- with $global.Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: job-config
          configMap:
            name: {{ $job.prefix }}-{{ $global.Values.configBootstrapperConfig.name }}
        - name: log4j-config
          configMap:
            name: {{ $job.prefix }}-{{ $global.Values.logConfig.name }}
        {{- if $global.Values.configurationCommands }}
        - name: bootstrap-configs
          configMap:
            name: {{ $job.prefix }}-bootstrap-configs
        {{- end }}
    {{- with $global.Values.nodeLabels }}
      nodeSelector:
      {{- toYaml . | nindent 8}}
    {{- end }}
      initContainers:
        {{- if or (eq $job.prefix "default") (eq $job.prefix "attribute") }}
        - name: attribute-service-ready
          image: busybox
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c"]
          args: ["until nc -zv {{ $global.Values.attributeServiceConfig.data.host }} {{ $global.Values.attributeServiceConfig.data.port }}; \
                  do echo 'waiting for {{ $global.Values.attributeServiceConfig.data.host }} {{ $global.Values.attributeServiceConfig.data.port }}'; \
                  sleep 5; done"]
        {{- end }}
        {{- if or (eq $job.prefix "default") (eq $job.prefix "entity") }}
        - name: entity-service-ready
          image: busybox
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c"]
          args: ["until nc -zv {{ $global.Values.entityServiceConfig.data.host }} {{ $global.Values.entityServiceConfig.data.port }}; \
                  do echo 'waiting for {{ $global.Values.entityServiceConfig.data.host }} {{ $global.Values.entityServiceConfig.data.port }}'; \
                  sleep 5; done"]
        {{- end }}
      containers:
        - name: {{ $global.Chart.Name }}
          image: "{{ $global.Values.image.repository }}:{{ $global.Chart.AppVersion }}"
          imagePullPolicy: {{ $global.Values.image.pullPolicy }}
          args: [ "-c", "/etc/config-bootstrapper/application.conf", "-C", "/app/resources/configs/config-bootstrapper/{{ $job.prefix }}-service", "--upgrade" ]
          env:
            - name: SERVICE_NAME
              value: "{{ $global.Chart.Name }}"
            - name: LOG4J_CONFIGURATION_FILE
              value: "/var/{{ $global.Chart.Name }}/log/log4j2.properties"
            - name: JAVA_TOOL_OPTIONS
              value: {{ $global.Values.javaOpts | quote }}
          volumeMounts:
            - name: job-config
              mountPath: /etc/config-bootstrapper/application.conf
              subPath: application.conf
            - name: log4j-config
              mountPath: /var/{{ $global.Chart.Name }}/log
            {{- range $key, $value := $job.configurationCommands }}
            - name: bootstrap-configs
              mountPath: /app/resources/configs/config-bootstrapper/{{ $job.prefix }}-service/extras/{{ $key }}
              subPath: {{ $key }}
            {{- end }}
          resources:
            {{- toYaml $global.Values.resources | nindent 12 }}

  backoffLimit: 100
{{- end }}
{{- end }}
