version: 2.1

orbs:
  codecov: codecov/codecov@1
  snyk: snyk/snyk@0.0.10

executors:
  gradle_docker:
    docker:
      - image: cimg/openjdk:11.0
  helm:
    docker:
      - image: hypertrace/helm-gcs-packager:0.3.0

commands:
  gradle:
    description: 'Run the provided gradle command'
    parameters:
      args:
        type: string
      when:
        default: "on_success"
        type: enum
        enum: ["on_fail", "on_success", "always"]
    steps:
      - run:
          name: << parameters.args >>
          command: ./gradlew << parameters.args >> --info --max-workers=2 -Dorg.gradle.jvmargs=-Xmx2g -Dorg.gradle.console=plain --continue
          when: << parameters.when >>
  update-submodule:
    description: 'Pull Submodules'
    steps:
      - run:
          name: Pull Submodules
          # submodule hypertrace-graphql includes a submodule of hypertrace-core-graphql
          command: git submodule update --init --recursive
      - run:
          name: Ensure submodules point to commit from main branch
          command: git submodule foreach "git merge-base --is-ancestor HEAD origin/main"
  setup_build_environment:
    description: 'Generates cache key from a hash of all gradle files'
    steps:
      - checkout
      - update-submodule
      - run:
          name: Generate cache key
          command: find . -type f -name "*.gradle*" -o -name "gradle-wrapper*" -exec shasum {} + | sort > /tmp/checksum.txt && cat /tmp/checksum.txt
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "/tmp/checksum.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
  populate_and_save_cache:
    description: 'Downloads all gradle dependencies and uploads cache for later use'
    steps:
      - gradle:
          args: downloadDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "/tmp/checksum.txt" }}
jobs:
  build:
    executor: gradle_docker
    steps:
      - setup_build_environment
      # The remote docker version is independent from what's installed in the gradle_docker image and defaults to Docker 17.
      #   Use the latest value from https://circleci.com/docs/2.0/building-docker-images/#docker-version
      - setup_remote_docker: &latest_remote_docker
          version: 19.03.12
      - populate_and_save_cache
      - gradle:
          args: build dockerBuildImages
      - gradle:
          args: jacocoTestReport
      - codecov/upload:
          flags: unit
  merge-publish:
    executor: gradle_docker
    steps:
      - setup_build_environment
      - setup_remote_docker: *latest_remote_docker
      - gradle:
          args: dockerPushImages
  release-publish:
    executor: gradle_docker
    steps:
      - setup_build_environment
      - setup_remote_docker: *latest_remote_docker
      - gradle:
          args: dockerPushImages
  validate-charts:
    executor: helm
    steps:
      - checkout
      - run:
          name: Helm Charts Lint and Template Render
          command: |
            helm lint --strict ./helm/
            helm template ./helm/
  snyk-scan:
    executor:
      name: gradle_docker
    environment:
      GRADLE_OPTS: -Dorg.gradle.workers.max=1 # Snyk doesn't handle parallelism well
    steps:
      - setup_build_environment
      - snyk/scan:
          additional-arguments: --all-sub-projects --policy-path=.snyk
  release-charts:
    executor: helm
    steps:
      - checkout
      - run:
          name: Add release tag
          command: |
            git config --global user.email "${CIRCLE_USERNAME}@hypertrace.org"
            git config --global user.name "$CIRCLE_USERNAME"
            git tag -am "Released by $CIRCLE_USERNAME" $(git describe --abbrev=0 --tags | sed 's/^release-//')
      - run:
          name: Remove trigger tag
          command: git tag -d release-$(git describe --abbrev=0)
      - run:
          name: Package and Publish Helm Charts
          # Read the "name:" from Chart.yaml. The chart version is <chart-name>-<semver git tag>
          command: |
            CHART_VERSION=$(git describe --abbrev=0)
            CHART_NAME=$(awk '/^name:/ {print $2}' ./helm/Chart.yaml)
            export GOOGLE_APPLICATION_CREDENTIALS=${HOME}/helm-gcs-key.json
            echo ${HELM_GCS_CREDENTIALS} > ${GOOGLE_APPLICATION_CREDENTIALS}
            helm repo add helm-gcs ${HELM_GCS_REPOSITORY}
            helm package --version ${CHART_VERSION} --app-version ${CHART_VERSION} ./helm/
            helm gcs push ${CHART_NAME}-${CHART_VERSION}.tgz helm-gcs --public --retry
      - add_ssh_keys:
          fingerprints:
            - '89:21:66:64:b1:9e:5a:a6:7e:8c:67:f8:9a:3c:90:7b'
      - run:
          name: Update remote tags
          command: git push origin refs/tags/$(git describe --abbrev=0) :refs/tags/release-$(git describe --abbrev=0)

workflows:
  version: 2
  build-and-publish:
    jobs:
      - build
      - validate-charts
      - snyk-scan:
          context: hypertrace-vulnerability-scanning
      - merge-publish:
          context: hypertrace-publishing
          requires:
            - build
            - validate-charts
            - snyk-scan
          filters:
            branches:
              only:
                - main
      - release-publish:
          context: hypertrace-publishing
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^release-.*/
      - release-charts:
          context: hypertrace-publishing
          requires:
            - release-publish
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^release-.*/
